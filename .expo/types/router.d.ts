/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string | object = string> {
      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/login`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/config` | `/config`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/contato` | `/contato`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/vacinacao` | `/vacinacao`; params?: Router.UnknownInputParams; } | { pathname: `/funLogin/cadastro`; params?: Router.UnknownInputParams; } | { pathname: `/funLogin/conta`; params?: Router.UnknownInputParams; } | { pathname: `/funLogin/editar_perfil`; params?: Router.UnknownInputParams; } | { pathname: `/funLogin/modal`; params?: Router.UnknownInputParams; } | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } };
      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/login`; params?: Router.UnknownOutputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/config` | `/config`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/contato` | `/contato`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/vacinacao` | `/vacinacao`; params?: Router.UnknownOutputParams; } | { pathname: `/funLogin/cadastro`; params?: Router.UnknownOutputParams; } | { pathname: `/funLogin/conta`; params?: Router.UnknownOutputParams; } | { pathname: `/funLogin/editar_perfil`; params?: Router.UnknownOutputParams; } | { pathname: `/funLogin/modal`; params?: Router.UnknownOutputParams; } | { pathname: `/+not-found`, params: Router.UnknownOutputParams & {  } };
      href: Router.RelativePathString | Router.ExternalPathString | `/login${`?${string}` | `#${string}` | ''}` | `/_sitemap${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/config${`?${string}` | `#${string}` | ''}` | `/config${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/contato${`?${string}` | `#${string}` | ''}` | `/contato${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}${`?${string}` | `#${string}` | ''}` | `/${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/vacinacao${`?${string}` | `#${string}` | ''}` | `/vacinacao${`?${string}` | `#${string}` | ''}` | `/funLogin/cadastro${`?${string}` | `#${string}` | ''}` | `/funLogin/conta${`?${string}` | `#${string}` | ''}` | `/funLogin/editar_perfil${`?${string}` | `#${string}` | ''}` | `/funLogin/modal${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/login`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/config` | `/config`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/contato` | `/contato`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/vacinacao` | `/vacinacao`; params?: Router.UnknownInputParams; } | { pathname: `/funLogin/cadastro`; params?: Router.UnknownInputParams; } | { pathname: `/funLogin/conta`; params?: Router.UnknownInputParams; } | { pathname: `/funLogin/editar_perfil`; params?: Router.UnknownInputParams; } | { pathname: `/funLogin/modal`; params?: Router.UnknownInputParams; } | `/+not-found` | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } };
    }
  }
}
